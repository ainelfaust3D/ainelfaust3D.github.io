document.addEventListener('DOMContentLoaded', () => {
    const portfolioGallery = document.getElementById('portfolio-gallery');
    const tabButtons = document.querySelectorAll('.tab-button');

    // –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ (—Ç–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è)
    // –í–∞–º –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –≤—Ä—É—á–Ω—É—é –∑–∞–ø–æ–ª–Ω–∏—Ç—å —ç—Ç–æ—Ç –æ–±—ä–µ–∫—Ç –ø—É—Ç—è–º–∏ –∫ –≤–∞—à–∏–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º.
    // –ü—Ä–∏–º–µ—Ä: 'images/3d_print/image1.jpg'
    const portfolioItems = {
        '3d_print': [
            { src: 'images/3d_print/1.png', alt: '3D –ø–µ—á–∞—Ç—å 1', title: '3D –ø–µ—á–∞—Ç—å 1', description: '–û–ø–∏—Å–∞–Ω–∏–µ 3D –ø–µ—á–∞—Ç–∏ 1.' },
            { src: 'images/3d_print/2.png', alt: '3D –ø–µ—á–∞—Ç—å 2', title: '3D –ø–µ—á–∞—Ç—å 2', description: '–û–ø–∏—Å–∞–Ω–∏–µ 3D –ø–µ—á–∞—Ç–∏ 2.' },
            { src: 'images/3d_print/3.png', alt: '3D –ø–µ—á–∞—Ç—å 3', title: '3D –ø–µ—á–∞—Ç—å 3', description: '–û–ø–∏—Å–∞–Ω–∏–µ 3D –ø–µ—á–∞—Ç–∏ 3.' }
        ],
        'games': [
            { src: 'images/games/1.png', alt: '–ò–≥—Ä–∞ 1', title: '–ò–≥—Ä–∞ 1', description: '–û–ø–∏—Å–∞–Ω–∏–µ –∏–≥—Ä—ã 1.' },
            { src: 'images/games/2.png', alt: '–ò–≥—Ä–∞ 2', title: '–ò–≥—Ä–∞ 2', description: '–û–ø–∏—Å–∞–Ω–∏–µ –∏–≥—Ä—ã 2.' },
            { src: 'images/games/3.png', alt: '–ò–≥—Ä–∞ 3', title: '–ò–≥—Ä–∞ 3', description: '–û–ø–∏—Å–∞–Ω–∏–µ –∏–≥—Ä—ã 3.' }
        ],
        'technical_models': [
            { src: 'images/technical_models/1.png', alt: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –º–æ–¥–µ–ª—å 1', title: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –º–æ–¥–µ–ª—å 1', description: '–û–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –º–æ–¥–µ–ª–∏ 1.' },
            { src: 'images/technical_models/2.png', alt: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –º–æ–¥–µ–ª—å 2', title: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –º–æ–¥–µ–ª—å 2', description: '–û–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –º–æ–¥–µ–ª–∏ 2.' },
            { src: 'images/technical_models/3.png', alt: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –º–æ–¥–µ–ª—å 3', title: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –º–æ–¥–µ–ª—å 3', description: '–û–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –º–æ–¥–µ–ª–∏ 3.' }
        ]
    };

    let currentCategory = '3d_print'; // –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ç–µ–∫—É—â–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    let currentImageIndex = 0; // –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –∏–Ω–¥–µ–∫—Å–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è

    function renderPortfolio(category) {
        portfolioGallery.innerHTML = ''; // –û—á–∏—â–∞–µ–º –≥–∞–ª–µ—Ä–µ—é
        const items = portfolioItems[category];
        currentCategory = category; // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é

        if (items && items.length > 0) {
            items.forEach((item, index) => {
                const portfolioItem = document.createElement('div');
                portfolioItem.classList.add('portfolio-item');

                const img = document.createElement('img');
                img.src = item.src;
                img.alt = item.alt;
                img.dataset.full = item.src;
                img.dataset.index = index; // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–¥–µ–∫—Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è

                img.addEventListener('click', () => {
                    openLightbox(item.src, category, index);
                });

                const info = document.createElement('div');
                info.classList.add('portfolio-item-info');

                const title = document.createElement('h3');
                title.textContent = item.title;

                const description = document.createElement('p');
                description.textContent = item.description;

                info.appendChild(title);
                info.appendChild(description);
                portfolioItem.appendChild(img);
                portfolioItem.appendChild(info);
                portfolioGallery.appendChild(portfolioItem);
            });
        } else {
            portfolioGallery.innerHTML = '<p>–í —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–∫–∞ –Ω–µ—Ç —Ä–∞–±–æ—Ç.</p>';
        }
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∫–Ω–æ–ø–æ–∫ –≤–∫–ª–∞–¥–æ–∫
    tabButtons.forEach(button => {
        button.addEventListener('click', () => {
            tabButtons.forEach(btn => btn.classList.remove('active'));
            button.classList.add('active');
            const category = button.dataset.category;
            renderPortfolio(category);
        });
    });


    // –ù–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ —ç–º–æ–¥–∑–∏
    const backgroundAnimation = document.querySelector('.background-animation');
    const emojis = [
        'üòÄ', 'üòÇ', 'üòç', 'ü§©', 'ü•≥', 'üòé', 'üòá', 'ü•∞', 'üòã', 'üòú',
        'üëç', 'üëè', 'üôå', 'üíñ', '‚ú®', 'üî•', 'üåà', '‚òÄÔ∏è', 'üå∏', 'üåº',
        'üê∂', 'üê±', 'üê≠', 'üêπ', 'üê∞', 'ü¶ä', 'üêª', 'üêº', 'üê®', 'üêØ',
        'üçé', 'üçì', 'üçá', 'üçâ', 'üçç', 'üçë', 'üçí', 'ü•ù', 'üçî', 'üçï',
        'üç¶', 'üç©', 'üç™', 'üéÇ', 'üç¨', 'üç≠', 'üç´', '‚òï', 'üçµ', 'ü•Ç',
        'üéà', 'üéÅ', 'üéâ', 'üéä', 'üéÄ', 'üëë', 'üíé', 'üí´', 'üåü', '‚ú®'
    ];

    function createFloatingEmoji() {
        const emoji = document.createElement('span');
        emoji.classList.add('floating-emoji');
        emoji.textContent = emojis[Math.floor(Math.random() * emojis.length)];

        const size = Math.random() * 40 + 20; // –†–∞–∑–º–µ—Ä –æ—Ç 20px –¥–æ 60px
        emoji.style.fontSize = `${size}px`;

        const startX = Math.random() * window.innerWidth;
        const startY = window.innerHeight + Math.random() * 100; // –ù–∞—á–∏–Ω–∞–µ–º –Ω–∏–∂–µ —ç–∫—Ä–∞–Ω–∞
        emoji.style.left = `${startX}px`;
        emoji.style.top = `${startY}px`;

        const animationDuration = Math.random() * 10 + 5; // –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –æ—Ç 5 –¥–æ 15 —Å–µ–∫—É–Ω–¥
        emoji.style.animationDuration = `${animationDuration}s`;
        emoji.style.animationDelay = `${Math.random() * 5}s`; // –ó–∞–¥–µ—Ä–∂–∫–∞ –¥–æ 5 —Å–µ–∫—É–Ω–¥

        backgroundAnimation.appendChild(emoji);

        emoji.addEventListener('click', (event) => {
            const clickedEmoji = event.target;
            const rect = clickedEmoji.getBoundingClientRect();

            // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â—É—é –∞–Ω–∏–º–∞—Ü–∏—é floatAndFade –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏
            clickedEmoji.style.animation = 'none';
            clickedEmoji.style.opacity = '1';
            clickedEmoji.style.transform = 'none'; // –°–±—Ä–æ—Å –≤—Å–µ—Ö —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–π

            clickedEmoji.style.position = 'fixed';
            clickedEmoji.style.left = `${rect.left}px`;
            clickedEmoji.style.top = `${rect.top}px`;
            clickedEmoji.style.zIndex = '1001';
            clickedEmoji.classList.add('falling');

            const randomX = (Math.random() - 0.5) * 400; // -200 to 200 pixels horizontal deviation
            const randomRotation = Math.random() * 1080; // 0 to 1080 degrees rotation
            const fallAnimationDuration = 2 + Math.random() * 2; // 2 to 4 seconds

            clickedEmoji.style.setProperty('--random-x', `${randomX}px`);
            clickedEmoji.style.setProperty('--random-rotation', `${randomRotation}deg`);
            clickedEmoji.style.setProperty('--emoji-size', `${size}px`);
            clickedEmoji.style.animation = `fall ${fallAnimationDuration}s forwards`;

            clickedEmoji.addEventListener('animationend', () => {
                // clickedEmoji.remove(); // –≠–º–æ–¥–∑–∏ –æ—Å—Ç–∞–µ—Ç—Å—è –Ω–∞ —ç–∫—Ä–∞–Ω–µ
                createFloatingEmoji(); // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —ç–º–æ–¥–∑–∏ –≤–∑–∞–º–µ–Ω
            }, { once: true });
        });
    }

    // –°–æ–∑–¥–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —ç–º–æ–¥–∑–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    for (let i = 0; i < 30; i++) {
        createFloatingEmoji();
    }

    // –†–µ–Ω–¥–µ—Ä–∏–º –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (–ø–µ—Ä–≤–∞—è –≤–∫–ª–∞–¥–∫–∞)
    renderPortfolio('3d_print');

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –¥–ª—è –ª–æ–≥–æ—Ç–∏–ø–∞
    const logo = document.querySelector('.logo');
    if (logo) {
        logo.addEventListener('click', () => {
            logo.classList.toggle('straight');
        });
    }


    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –ª–∞–π—Ç–±–æ–∫—Å–∞
    function openLightbox(imageSrc, category, index) {
        const lightbox = document.createElement('div');
        lightbox.id = 'lightbox';
        lightbox.classList.add('active');

        const img = document.createElement('img');
        img.src = imageSrc;
        img.alt = portfolioItems[category][index].alt;

        const closeBtn = document.createElement('button');
        closeBtn.classList.add('lightbox-close');
        closeBtn.innerHTML = '&times;';
        closeBtn.addEventListener('click', () => {
            lightbox.remove();
        });

        const prevBtn = document.createElement('button');
        prevBtn.classList.add('lightbox-nav', 'prev');
        prevBtn.innerHTML = '&#10094;'; // –õ–µ–≤–∞—è —Å—Ç—Ä–µ–ª–∫–∞
        prevBtn.addEventListener('click', (e) => {
            e.stopPropagation(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –∑–∞–∫—Ä—ã—Ç–∏–µ –ª–∞–π—Ç–±–æ–∫—Å–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ —Å—Ç—Ä–µ–ª–∫—É
            navigateLightbox(-1, category);
        });

        const nextBtn = document.createElement('button');
        nextBtn.classList.add('lightbox-nav', 'next');
        nextBtn.innerHTML = '&#10095;'; // –ü—Ä–∞–≤–∞—è —Å—Ç—Ä–µ–ª–∫–∞
        nextBtn.addEventListener('click', (e) => {
            e.stopPropagation(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –∑–∞–∫—Ä—ã—Ç–∏–µ –ª–∞–π—Ç–±–æ–∫—Å–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ —Å—Ç—Ä–µ–ª–∫—É
            navigateLightbox(1, category);
        });

        lightbox.appendChild(img);
        lightbox.appendChild(closeBtn);
        lightbox.appendChild(prevBtn);
        lightbox.appendChild(nextBtn);
        document.body.appendChild(lightbox);

        currentImageIndex = index; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –∏–Ω–¥–µ–∫—Å
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –ª–∞–π—Ç–±–æ–∫—Å—É
    function navigateLightbox(direction, category) {
        const items = portfolioItems[category];
        currentImageIndex = (currentImageIndex + direction + items.length) % items.length;
        const newImageSrc = items[currentImageIndex].src;
        const lightboxImg = document.querySelector('#lightbox img');
        if (lightboxImg) {
            lightboxImg.src = newImageSrc;
            lightboxImg.alt = items[currentImageIndex].alt;
        }
    }
});